import java.time.ZonedDateTime
import java.time.format.DateTimeFormatter
import java.time.format.FormatStyle

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.3/userguide/tutorial_java_projects.html
 */
buildscript {
    ext {
        logbackVersion = '1.2.3'
        junitVersion = '5.6.0'
    }
}

plugins {
    id 'java'
    id 'application'
    id 'idea'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 11
targetCompatibility = 11

dependencies {
    implementation 'org.projectlombok:lombok:1.18.12'
    implementation 'org.apache.commons:commons-lang3:3.9'
    implementation "ch.qos.logback:logback-core:$logbackVersion"
    implementation "ch.qos.logback:logback-classic:$logbackVersion"
    implementation "ch.qos.logback:logback-access:$logbackVersion"

    testImplementation 'org.mockito:mockito-core:3.3.0'
    testImplementation 'org.junit.jupiter:junit-jupiter:$junitVersion'

    // Only needed to run tests in a version of IntelliJ IDEA that bundles older versions
    testRuntimeOnly("org.junit.platform:junit-platform-launcher:1.6.0")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:$junitVersion")
    testRuntimeOnly("org.junit.vintage:junit-vintage-engine:$junitVersion")
}

idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}

// Define the main class for the application
mainClassName = 'org.example.Application'

run {
    standardInput = System.in
    def appConfig = System.getProperty('app.config', "$projectDir/build/config")
    def logsDir = System.getProperty('logFilePath', "$projectDir/build/tmp/logs")
    def logsFolder = new File(logsDir)
    if(!logsFolder.exists()){ logsFolder.mkdirs()}

    def appConfigFolder = new File(appConfig)
    if(!logsFolder.exists()) { appConfigFolder.mkdirs()}

    jvmArgs = [
            "-Dlogging.config=classpath:logback-spring.xml",
            "-DlogFilePath=$logsDir",
            "-Dapp.config=$appConfig",
            "-Dlogback.appender=consoleColor"
    ]
}

test {
	useJUnitPlatform()

	testLogging {
		events "passed", "skipped", "failed"
	}
}

static String getDate() {
    return ZonedDateTime.now().format(DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM))
}