import java.time.ZonedDateTime
import java.time.format.DateTimeFormatter
import java.time.format.FormatStyle

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.3/userguide/tutorial_java_projects.html
 */
plugins {
    id 'java'
    id 'application'
    id 'idea'
    id 'org.openjfx.javafxplugin' version '0.0.9'
}

repositories {
    mavenCentral()
}

def logbackVersion = '1.2.3'
def junitVersion = '5.6.0'

sourceCompatibility = 11
targetCompatibility = 11

dependencies {
    compile 'javazoom:jlayer:1.0.1'
    implementation 'org.projectlombok:lombok:1.18.12'
    implementation 'org.apache.commons:commons-lang3:3.9'

    implementation 'org.slf4j:slf4j-api:1.7.30'
    implementation "ch.qos.logback:logback-core:$logbackVersion"
    implementation "ch.qos.logback:logback-classic:$logbackVersion"
    implementation "ch.qos.logback:logback-access:$logbackVersion"

    testImplementation 'org.mockito:mockito-core:3.3.0'
    testImplementation "org.junit.jupiter:junit-jupiter:$junitVersion"

    // Only needed to run tests in a version of IntelliJ IDEA that bundles older versions
    testRuntimeOnly("org.junit.platform:junit-platform-launcher:1.6.0")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:$junitVersion")
    testRuntimeOnly("org.junit.vintage:junit-vintage-engine:$junitVersion")
}

idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}

mainClassName = 'org.example.Application'

run {
    standardInput = System.in
    String logbackAppender = System.getenv('LOGBACK_APPENDER')
    def appConfig = System.getProperty('app.config', "$projectDir/tmp/config")

    def logsDir = System.getProperty('logFilePath', "$projectDir/tmp/logs")
    File logsFolder = new File(logsDir)
    if(!logsFolder.exists()){ logsFolder.mkdirs()}

    File appConfigFolder = new File(appConfig)
    if(!logsFolder.exists()) { appConfigFolder.mkdirs()}

    jvmArgs = [
            "-Dlogging.config=classpath:logback.xml",
            "-DlogFilePath=$logsDir",
            "-Dapp.config=$appConfig",
            "-Dlogback.appender=$logbackAppender"
    ]
}

task runTextEditor {
    mainClassName = 'org.example.text.TextEditor'
}
runTextEditor.finalizedBy(run)

test {
	useJUnitPlatform()

	testLogging {
		events "passed", "skipped", "failed"
	}
}

javafx {
    version = "13"
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}

static String getDate() {
    return ZonedDateTime.now().format(DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM))
}